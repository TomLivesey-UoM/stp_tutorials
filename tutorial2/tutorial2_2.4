#!usr/bin/python

def reverse_translate_frames(seq):
    def reverse_comp(seq):
        reverse_dict = {'C':'T',
                        'T':'C',
                        'A':'G',
                        'G':'A'}
        
        seq = seq.upper()
        reverse = ""
        for base in seq:
            for k,v in reverse_dict.items():
                if base in v:
                    reverse += k
        
        return reverse
    
    def translate(seq):
        codon_dict = {'F':['TTT', 'TTC'],
                    'L':['TTA', 'TTG', 'CTT', 'CTC', 'CTA', 'CTG'],
                    'I':['ATT', 'ATC', 'ATA'],
                    'M':['ATG'],
                    'V':['GTT', 'GTC', 'GTA', 'GTG'],
                    'S':['TCT', 'TCC', 'TCA', 'TCG', 'AGT', 'AGC'],
                    'P':['CCT', 'CCC', 'CCA', 'CCG'],
                    'T':['ACT', 'ACC', 'ACA', 'ACG'],
                    'A':['GCT', 'GCC', 'GCA', 'GCG'],
                    'Y':['TAT', 'TAC'],
                    'H':['CAT', 'CAC'],
                    'Q':['CAA', 'CAG'],
                    'N':['AAT', 'AAC'],
                    'K':['AAA', 'AAG'],
                    'D':['GAT', 'GAC'],
                    'E':['GAA', 'GAG'],
                    'C':['TGT', 'TGC'],
                    'W':['TGG'],
                    'R':['CGT', 'CGC', 'CGA', 'CGG', 'AGA', 'AGG'],
                    'G':['GGT', 'GGC', 'GGA', 'GGG'],
                    '*':['TAA', 'TAG', 'TGA']}
        
        seq = seq.upper()
        codons = [seq[i:i+3] for i  in range(0, len(seq), 3)]
        peptide = ""
        for codon in codons:
            for k,v in codon_dict.items():
                if codon in v:
                    peptide += k
    
        return(peptide)
    
    seq = seq.upper()
    rev_seq = reverse_comp(seq)
    for_seqs = [seq, seq[1:], seq[2:]]
    rev_seqs = [rev_seq, rev_seq[1:], rev_seq[2:]]

    output = ""
    
    output += "Forward:\n\n"
    for fseq in for_seqs:
        output += f"{translate(fseq)}\n\n"
    
    output += "Reverse:\n\n"
    for rseq in rev_seqs:
        output += f"{translate(rseq)}\n\n"
    
    print(output)

reverse_translate_frames('aggagtaagcccttgcaactggaaatacacccattg')

